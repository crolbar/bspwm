;;(deflisten hyprland "scripts/hyprland.sh")
(deflisten hyprland "./scripts/hyprland.c")
(deflisten volume "scripts/pulse.sh")

(defpoll short_time :interval "10s" "date '+%I:%M %p'")
(defpoll long_time :interval "10s" "date '+%A, %B %d, %Y %I:%M %p'")
(defvar is_time_short true)

(defvar scroll "up")


(defwidget bar []
    (box :class "barr" :orientation "h"
        (box :space-evenly false :halign "start" (workspaces))
        (box :space-evenly false :halign "center" (currwin))
        (box :space-evenly false :halign "end" (side))
    )
)

(defwidget workspaces []
    (box 
        :orientation "h" 
        :space-evenly false 
        :class "workspaces" 
        :hexpand true
        (for workspace in {hyprland.workspaces}
            (eventbox
                :width 20
                :class "workspace ${hyprland.active == workspace.id ? "current" : ""}"
                :onclick "hyprctl dispatch workspace name:${workspace.name}"
                :onscroll "./scripts/workspace_scroll.c {}"
                "${workspace.name}"
            )
        )
    )
)

(defwidget currwin [] 
    (box :class "currwin"
        "${hyprland.currwin == "null" ? "" :
            "${strlength(hyprland.currwin) >= 100 ? ".." :
                "${hyprland.currwin}"
            }"
        }"
    )
)

(defwidget side [] 
    (box 
        :orientation "h"
        :space-evenly false
        :spacing 10

        "${hyprland.kb_layout}"

        (eventbox
            :onclick "pamixer -t"
            :onmiddleclick "~/.config/hypr/scripts/default-sink.sh"
            :onrightclick "pgrep pavucontrol > /dev/null && pkill pavucontrol || pavucontrol &"
            :onscroll "eww update -c ~/.config/hypr/eww scroll={} && pamixer -${scroll == "up" ? "i" : "d"} 5"
            "${volume.sink}"
        )

        (eventbox
            :onclick "pamixer --default-source -t"
            :onscroll "eww update -c ~/.config/hypr/eww scroll={} && pamixer --default-source -${scroll == "up" ? "i" : "d"} 5"
            "${volume.source}"
        )

        " ${round(EWW_CPU.avg, 0)}%"
        " ${round(EWW_RAM.used_mem_perc, 0)}%"

        (button
            :onclick "${EWW_CMD} update is_time_short=${is_time_short ? false : true}"
            "${is_time_short ? "${short_time}" : "${long_time}"}"
        )

        (systray :space-evenly false :class "tray")

        (button :class "board_button" :timeout "5s" :onclick "eww open board --toggle" "")
    )
)


(defwindow bar
    :monitor 0
    :exclusive true
    :geometry (geometry 
        :x "0%"
        :y "0%"
        :width "100%"
        :height "20px"
        :anchor "top center"
    )

    (bar)
)
